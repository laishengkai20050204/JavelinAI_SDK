<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.service.impl.mapper.ConversationMemoryMapper">

    <resultMap id="ConversationMessageMap" type="com.example.service.impl.entity.ConversationMessageEntity">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="conversationId" column="conversation_id"/>
        <result property="role" column="role"/>
        <result property="content" column="content"/>
        <result property="payload" column="payload"/>
        <result property="messageTimestamp" column="message_timestamp"/>
        <result property="state" column="state"/>
        <result property="stepId" column="step_id"/>
        <result property="seq" column="seq"/>
        <result property="createdAt" column="created_at"/>
    </resultMap>

    <sql id="baseColumns">
        id, user_id, conversation_id, role, content, payload, message_timestamp, state, step_id, seq, created_at
    </sql>

    <select id="selectHistory" resultMap="ConversationMessageMap">
        SELECT <include refid="baseColumns"/>
        FROM conversation_messages
        WHERE user_id = #{userId}
          AND conversation_id = #{conversationId}
          AND state = 'FINAL'
        ORDER BY created_at ASC
    </select>

    <delete id="deleteConversation">
        DELETE FROM conversation_messages
        WHERE user_id = #{userId}
          AND conversation_id = #{conversationId}
    </delete>

    <select id="selectByContent" resultMap="ConversationMessageMap">
        SELECT <include refid="baseColumns"/>
        FROM conversation_messages
        WHERE user_id = #{userId}
          AND conversation_id = #{conversationId}
          AND content LIKE CONCAT('%', #{query}, '%')
          AND state = 'FINAL'
        ORDER BY created_at DESC
        LIMIT #{limit}
    </select>

    <select id="selectLatest" resultMap="ConversationMessageMap">
        SELECT <include refid="baseColumns"/>
        FROM conversation_messages
        WHERE user_id = #{userId}
          AND conversation_id = #{conversationId}
          AND state = 'FINAL'
        ORDER BY created_at DESC
        LIMIT #{limit}
    </select>

    <insert id="upsertMessage">
        INSERT INTO conversation_messages
        (user_id, conversation_id, role, content, payload, message_timestamp,
         step_id, seq, state, created_at)
        VALUES
        (#{userId}, #{conversationId}, #{role}, #{content}, #{payload}, #{messageTimestamp},
         #{stepId}, #{seq}, #{state}, NOW())
        ON DUPLICATE KEY UPDATE
        content = VALUES(content),
        payload = VALUES(payload)
    </insert>

    <select id="selectContext" resultType="map">
        SELECT id, user_id, conversation_id, role, content, payload, message_timestamp,
               step_id, seq, state, created_at
        FROM conversation_messages
        WHERE user_id = #{userId}
          AND conversation_id = #{conversationId}
          AND state IN ('DRAFT','FINAL')
        ORDER BY created_at ASC
        LIMIT #{limit}
    </select>

    <update id="promoteDraftsToFinal">
        UPDATE conversation_messages
        SET state = 'FINAL'
        WHERE user_id = #{userId}
          AND conversation_id = #{conversationId}
          AND step_id = #{stepId}
          AND state = 'DRAFT'
    </update>

    <delete id="deleteDraftsOlderThanHours">
        DELETE FROM conversation_messages
        WHERE state = 'DRAFT'
          AND created_at < DATE_SUB(NOW(), INTERVAL #{hours} HOUR)
    </delete>

</mapper>
